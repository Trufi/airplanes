'use strict'; // code generated by pbf v3.2.0

var MsgType = (exports.MsgType = {
  tickData: {
    value: 0,
    options: {},
  },
});

// Position ========================================

var Position = (exports.Position = {});

Position.read = function(pbf, end) {
  return pbf.readFields(Position._readField, { x: 0, y: 0, z: 0 }, end);
};
Position._readField = function(tag, obj, pbf) {
  if (tag === 0) obj.x = pbf.readVarint(true);
  else if (tag === 1) obj.y = pbf.readVarint(true);
  else if (tag === 2) obj.z = pbf.readVarint(true);
};
Position.write = function(obj, pbf) {
  if (obj.x) pbf.writeVarintField(0, obj.x);
  if (obj.y) pbf.writeVarintField(1, obj.y);
  if (obj.z) pbf.writeVarintField(2, obj.z);
};

// Rotation ========================================

var Rotation = (exports.Rotation = {});

Rotation.read = function(pbf, end) {
  return pbf.readFields(Rotation._readField, { x: 0, y: 0, z: 0, w: 0 }, end);
};
Rotation._readField = function(tag, obj, pbf) {
  if (tag === 0) obj.x = pbf.readFloat();
  else if (tag === 1) obj.y = pbf.readFloat();
  else if (tag === 2) obj.z = pbf.readFloat();
  else if (tag === 3) obj.w = pbf.readFloat();
};
Rotation.write = function(obj, pbf) {
  if (obj.x) pbf.writeFloatField(0, obj.x);
  if (obj.y) pbf.writeFloatField(1, obj.y);
  if (obj.z) pbf.writeFloatField(2, obj.z);
  if (obj.w) pbf.writeFloatField(3, obj.w);
};

// TickData ========================================

var TickData = (exports.TickData = {});

TickData.read = function(pbf, end) {
  return pbf.readFields(TickData._readField, { type: 0, bodies: [] }, end);
};
TickData._readField = function(tag, obj, pbf) {
  if (tag === 0) obj.type = pbf.readVarint();
  else if (tag === 1) obj.bodies.push(TickData.TickBodyData.read(pbf, pbf.readVarint() + pbf.pos));
};
TickData.write = function(obj, pbf) {
  if (obj.type) pbf.writeVarintField(0, obj.type);
  if (obj.bodies)
    for (var i = 0; i < obj.bodies.length; i++)
      pbf.writeMessage(1, TickData.TickBodyData.write, obj.bodies[i]);
};

// TickData.TickBodyData ========================================

TickData.TickBodyData = {};

TickData.TickBodyData.read = function(pbf, end) {
  return pbf.readFields(
    TickData.TickBodyData._readField,
    { id: 0, position: null, rotation: null, updateTime: 0, health: 0, lastShotTime: 0 },
    end,
  );
};
TickData.TickBodyData._readField = function(tag, obj, pbf) {
  if (tag === 0) obj.id = pbf.readVarint();
  else if (tag === 1) obj.position = Position.read(pbf, pbf.readVarint() + pbf.pos);
  else if (tag === 2) obj.rotation = Rotation.read(pbf, pbf.readVarint() + pbf.pos);
  else if (tag === 3) obj.updateTime = pbf.readVarint(true);
  else if (tag === 4) obj.health = pbf.readVarint(true);
  else if (tag === 5) obj.lastShotTime = pbf.readVarint(true);
};
TickData.TickBodyData.write = function(obj, pbf) {
  if (obj.id) pbf.writeVarintField(0, obj.id);
  if (obj.position) pbf.writeMessage(1, Position.write, obj.position);
  if (obj.rotation) pbf.writeMessage(2, Rotation.write, obj.rotation);
  if (obj.updateTime) pbf.writeVarintField(3, obj.updateTime);
  if (obj.health) pbf.writeVarintField(4, obj.health);
  if (obj.lastShotTime) pbf.writeVarintField(5, obj.lastShotTime);
};
